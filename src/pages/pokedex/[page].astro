---
import Layout from "../../layouts/Layout.astro";
import {getPokeData, getLimitURL} from '../../services/service.ts';
import {type iPokemon, type iType} from '../../types/api.ts';
import Header from '../../components/header.astro';
import Controls from '../../components/controls.astro';
import Imagen from '../../components/imagen.astro';


export async function getStaticPaths({ paginate }) {
    const limitAPI:number = getLimitURL();
    const url:string = "https://pokeapi.co/api/v2/pokemon?limit="+limitAPI+"&offset=0";
    const data = await getPokeData(url);
    return paginate(data, {pageSize: 20})
}

const { page } = Astro.props;
---

<Layout title="PokeDex">
    <main>

        <Header transition:persist/>
    
        <div class="parent" transition:animate="fade">
            {
                page.data.map((pokemon: iPokemon) => 
                    <a href={'../pokemon/' + pokemon.name}>
                        <div class="parentNode">
                        <p>{"N.ยบ "+pokemon.id}</p>
                        <div class="sprite">
                            <Imagen src={pokemon.sprites.front_default} alt="Pokemon sprite img" width="96px" height="96px" transitionName={pokemon.name}/>
                        </div>
                        <h1>{pokemon.name}</h1>
                        <ul class="typesList">
                            {
                                pokemon.types.map((tipos: iType) => 
                                    <li>
                                        {tipos.type.name}
                                        <img src={"/typesIcons/" + tipos.type.name + ".png"} alt="Icono type" width="22px" height="22px">
                                    </li>
                                    
                                )
                            }
                        </ul>
                    </div>
                    </a>
                )
            }
        </div>
    
        <Controls prev={page.url.prev} next={page.url.next} currentPage={page.currentPage} transition:persist/>
    </main>
</Layout>

<style>

    .sprite {
        margin-top: -15px;
    }

    .parent {
        display: grid;
        margin: auto;
        display: grid;
        gap: 1em;
    }

    a{
        text-decoration: none;
        color: black;
        height: min-content;
    }

    .parentNode{
        text-align: center;
        background-color: rgb(255, 255, 255, 0.8);
        border-top-left-radius: 20px;
        border-bottom-left-radius: 20px;
        border-bottom-right-radius: 20px;
        border-top-right-radius: 5px;
        transition: all 0.2s;
        overflow: hidden;
        padding: 5px;
    }

    .parentNode p{
        text-align: end;
        font-weight: bold;
    }

    .parentNode h1{
        text-transform: capitalize;
        font-size: 25px;
        margin-top: -20px;
        margin-bot: 20px;
    }

    .typesList{
        list-style-type: none;
        display: flex;
        flex-flow: row nowrap;
        gap: 2rem;
        justify-content: center;
    }

    .typesList li{
        display: flex;
        align-items: center;
        gap: 0.2rem;
    }

    @media screen and (min-width:100px){
        .header img{
            height: 48.75px;
            width: 300px;
        }
        .parent{
            width: 90%;
            grid-template-columns: repeat(1, 1fr);
            grid-template-rows: repeat(20, 1fr);
        }
    }

    @media screen and (min-width:700px){
        .parent{
            width: 85%;
            grid-template-columns: repeat(3, 1fr);
            grid-template-rows: repeat(7, 1fr);
        }
    }

    @media screen and (min-width:1024px){
        .parent{
            width: 80%;
            grid-template-columns: repeat(3, 1fr);
            grid-template-rows: repeat(7, 1fr);
        }

    }

    @media screen and (min-width:1440px){
        main{
            height: 100vh;
        }
        .parent{
            width: 75%;
            grid-template-columns: repeat(5, 1fr);
            grid-template-rows: repeat(4, 1fr);
        }

    }

</style>